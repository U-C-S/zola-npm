name: zola-bin publish actions
env:
  DEBUG: napi:*
  APP_NAME: zola-bin
  MACOSX_DEPLOYMENT_TARGET: "10.13"
permissions:
  contents: write
  id-token: write
"on":
  release:
    types: [created]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: windows-latest
            build: npm run build --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: npm run build --target x86_64-unknown-linux-gnu
          - host: macos-latest-arm
            target: aarch64-apple-darwin
            build: npm run build --target aarch64-apple-darwin
          - host: macos-latest-x64
            target: x86_64-apple-darwin
            build: npm run build --target x86_64-apple-darwin
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            zola/target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install npm dependencies
        run: npm install
      - name: Setup zola as a library
        run: npm run setup
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - run: ls -la
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ matrix.settings.target }}/zola-bin.*.node
          if-no-files-found: warn
          include-hidden-files: true
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Setup zola as a library
        run: npm run build:zola-bin
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Move artifacts
        run: npm run artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - run: npm publish ./npm/win32-x64-msvc --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: npm publish ./npm/linux-x64-gnu --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: npm publish ./npm/darwin-x64 --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - run: npm publish ./npm/darwin-arm64 --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - name: Publish zola-bin
        run: |
          npm config set provenance true
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish create-zola-site
        run: npm publish ./src/create-zola-site --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
